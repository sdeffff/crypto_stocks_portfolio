"""removed test tables

Revision ID: be251d808efd
Revises: 80d3a654ea78
Create Date: 2025-05-28 23:31:44.750336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'be251d808efd'
down_revision: Union[str, None] = '80d3a654ea78'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_subscritions')
    op.drop_table('test_notifications')
    op.drop_table('test_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test_users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('pfp', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('premium', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('test_users_pkey'))
    )
    op.create_table('test_notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('check_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('what_to_check', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('operator', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], name=op.f('test_notifications_uid_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('test_notifications_pkey'))
    )
    op.create_table('test_subscritions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('uid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('check_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('what_to_check', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('operator', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], name=op.f('test_subscritions_uid_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('test_subscritions_pkey'))
    )
    # ### end Alembic commands ###
